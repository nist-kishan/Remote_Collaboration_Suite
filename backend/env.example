# =============================================================================
# Remote Work Collaboration Suite - Backend Environment Variables
# =============================================================================
# Copy this file to .env and fill in your actual values
# DO NOT commit the .env file to version control

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
NODE_ENV=development
PORT=5000
HOST=localhost

# Application metadata
APP_NAME=Remote Work Collaboration Suite
APP_VERSION=1.0.0
APP_DESCRIPTION=Real-time collaboration platform for remote teams

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# MongoDB connection string
MONGODB_URI=mongodb://localhost:27017/remote_work_collaboration

# Optional: Database name (if different from URI)
DB_NAME=remote_work_collaboration

# Database connection options
DB_CONNECTION_TIMEOUT=30000
DB_SOCKET_TIMEOUT=45000
DB_MAX_POOL_SIZE=10
DB_MIN_POOL_SIZE=2

# =============================================================================
# JWT AUTHENTICATION
# =============================================================================
# Generate strong secrets for production (min 32 characters)
# Use: openssl rand -base64 32
ACCESS_TOKEN_SECRET=your_access_token_secret_key_here_make_it_long_and_secure_123456789
REFRESH_TOKEN_SECRET=your_refresh_token_secret_key_here_make_it_long_and_secure_123456789

# Token expiry times
ACCESS_TOKEN_EXPIRY=15m
REFRESH_TOKEN_EXPIRY=7d

# JWT issuer and audience
JWT_ISSUER=remote-collaboration-suite
JWT_AUDIENCE=remote-collaboration-users

# =============================================================================
# FRONTEND URLS & CORS
# =============================================================================
# Frontend URL for CORS and redirects
FRONTEND_URL=http://localhost:5173
FRONTEND_URI=http://localhost:5173

# Alternative frontend URL names (for compatibility)
CLIENT_URL=http://localhost:5173
NEXT_PUBLIC_FRONTEND_URL=http://localhost:5173
REACT_APP_FRONTEND_URL=http://localhost:5173
VITE_FRONTEND_URL=http://localhost:5173

# CORS configuration
CORS_ORIGIN=http://localhost:5173
CORS_CREDENTIALS=true
CORS_METHODS=GET,POST,PUT,DELETE,PATCH,OPTIONS
CORS_HEADERS=Content-Type,Authorization,X-Requested-With

# =============================================================================
# EMAIL CONFIGURATION (BREVO SMTP)
# =============================================================================
# BREVO SMTP CONFIGURATION (Optimized for Brevo Email Service)
# 
# Brevo Configuration (300 emails/day free):
SMTP_HOST=smtp-relay.brevo.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your_brevo_email@yourdomain.com
SMTP_PASS=your_brevo_smtp_key

# Email configuration
APP_NAME=Remote Work Collaboration Suite
REPLY_TO_EMAIL=your_brevo_email@yourdomain.com
FROM_EMAIL=noreply@yourdomain.com

# Email rate limiting (optimized for Brevo)
RATE_LIMIT_EMAILS=20
RATE_LIMIT_WINDOW_MS=60000

# Email templates and settings
EMAIL_TEMPLATE_DIR=./src/utils/templates
EMAIL_RATE_LIMIT=20
EMAIL_RATE_WINDOW=60000

# =============================================================================
# BREVO SETUP INSTRUCTIONS
# =============================================================================
# Step-by-step Brevo configuration:
#
# 1. CREATE BREVO ACCOUNT:
#    - Go to https://www.brevo.com/
#    - Sign up for a free account
#    - Verify your email address
#
# 2. GET SMTP CREDENTIALS:
#    - Login to your Brevo dashboard
#    - Go to "SMTP & API" → "SMTP"
#    - Copy your SMTP login (email)
#    - Generate or copy your SMTP key (password)
#
# 3. CONFIGURE SENDER DOMAIN (Optional but recommended):
#    - Go to "Senders & IP" → "Domains"
#    - Add your domain for better deliverability
#    - Verify domain ownership
#
# 4. CONFIGURE ENVIRONMENT VARIABLES:
#    - SMTP_USER: your Brevo SMTP login email
#    - SMTP_PASS: your Brevo SMTP key
#    - SMTP_HOST: smtp-relay.brevo.com (already set)
#    - SMTP_PORT: 587 (already set)
#
# 5. TEST CONNECTION:
#    - Start your application
#    - Check console for "✅ Brevo SMTP connection verified successfully"
#    - If you see errors, verify your credentials
#
# =============================================================================
# BREVO LIMITS & BEST PRACTICES
# =============================================================================
# - Free accounts: 300 emails per day
# - Paid accounts: Higher limits based on plan
# - Rate limit: 20 emails per minute (configured above)
# - Always use SMTP keys, never account passwords
# - Monitor your sending volume to avoid hitting limits
# - Use verified domains for better deliverability
#
# =============================================================================
# BREVO ADVANTAGES
# =============================================================================
# - Excellent deliverability rates
# - No authentication issues (unlike Outlook/Gmail)
# - Reliable SMTP service
# - Good free tier (300 emails/day)
# - Easy setup and configuration
# - Professional email templates
# - Detailed analytics and reporting
#
# =============================================================================
# ALTERNATIVE EMAIL SERVICES
# =============================================================================
# If Brevo doesn't work for your use case:
#
# SendGrid (smtp.sendgrid.net:587):
# - 100 emails/day free
# - Excellent deliverability
# - Requires API key setup
#
# Mailgun (smtp.mailgun.org:587):
# - 10,000 emails/month free
# - Great for developers
# - Requires domain verification
#
# Gmail (smtp.gmail.com:587):
# - May block cloud hosting IPs
# - Requires App Password
# - ~500 emails/day free
#
# Outlook (smtp-mail.outlook.com:587):
# - ~300 emails/day free
# - May have authentication issues
# - Requires App Password

# =============================================================================
# CLOUDINARY (FILE UPLOAD)
# =============================================================================
# Cloudinary configuration for file uploads
CLOUDINARY_NAME=your-cloudinary-name
CLOUDINARY_API_KEY=your-cloudinary-api-key
CLOUDINARY_API_SECRET=your-cloudinary-api-secret

# Cloudinary settings
CLOUDINARY_FOLDER=remote-collaboration
CLOUDINARY_MAX_FILE_SIZE=10485760
CLOUDINARY_ALLOWED_FORMATS=jpg,jpeg,png,gif,webp,pdf,doc,docx,txt

# =============================================================================
# SECURITY & VALIDATION
# =============================================================================
# Password reset token expiry (in milliseconds)
RESET_PASSWORD_TOKEN_EXPIRY=900000

# OTP expiry time (in milliseconds)
OTP_EXPIRY=300000

# Password requirements
PASSWORD_MIN_LENGTH=8
PASSWORD_REQUIRE_UPPERCASE=true
PASSWORD_REQUIRE_LOWERCASE=true
PASSWORD_REQUIRE_NUMBERS=true
PASSWORD_REQUIRE_SYMBOLS=true

# Account lockout settings
MAX_LOGIN_ATTEMPTS=5
LOCKOUT_DURATION=900000
ACCOUNT_LOCKOUT_THRESHOLD=3

# Session settings
SESSION_SECRET=your_session_secret_key_here_make_it_long_and_secure_123456789
SESSION_TIMEOUT=86400000

# =============================================================================
# RATE LIMITING
# =============================================================================
# Rate limiting configuration
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_SKIP_SUCCESSFUL_REQUESTS=false
RATE_LIMIT_SKIP_FAILED_REQUESTS=false

# API rate limiting
API_RATE_LIMIT_WINDOW_MS=60000
API_RATE_LIMIT_MAX_REQUESTS=60

# =============================================================================
# SOCKET.IO CONFIGURATION
# =============================================================================
# Socket.IO settings
SOCKET_CORS_ORIGIN=http://localhost:5173
SOCKET_PING_TIMEOUT=60000
SOCKET_PING_INTERVAL=25000
SOCKET_MAX_HTTP_BUFFER_SIZE=1e6

# Socket.IO transports
SOCKET_TRANSPORTS=websocket,polling

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================
# Multer configuration
UPLOAD_MAX_FILE_SIZE=10485760
UPLOAD_ALLOWED_MIME_TYPES=image/jpeg,image/png,image/gif,image/webp,application/pdf,text/plain,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document

# Upload directories
UPLOAD_TEMP_DIR=./uploads/temp
UPLOAD_PERMANENT_DIR=./uploads/permanent

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level: error, warn, info, debug
LOG_LEVEL=debug

# Log format
LOG_FORMAT=combined

# Enable detailed logging
DEBUG=true

# Log file settings
LOG_FILE_ENABLED=true
LOG_FILE_PATH=./logs/app.log
LOG_FILE_MAX_SIZE=10485760
LOG_FILE_MAX_FILES=5

# =============================================================================
# CACHING CONFIGURATION
# =============================================================================
# Redis configuration (optional)
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Cache settings
CACHE_TTL=300
CACHE_MAX_SIZE=1000

# =============================================================================
# MONITORING & HEALTH CHECKS
# =============================================================================
# Health check settings
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30000

# Metrics collection
METRICS_ENABLED=false
METRICS_PORT=9090

# =============================================================================
# CLOUD DEPLOYMENT (RENDER)
# =============================================================================
# Render deployment URL (automatically set by Render)
RENDER_EXTERNAL_URL=https://your-app-name.onrender.com

# Render specific settings
RENDER_DATABASE_URL=
RENDER_REDIS_URL=

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================
# Enable development mode features
DEV_MODE=true

# Enable API documentation
ENABLE_SWAGGER=true
SWAGGER_URL=/api-docs

# Enable security features
ENABLE_SECURITY_HEADERS=true
ENABLE_COMPRESSION=true
ENABLE_HELMET=true

# Development database seeding
SEED_DATABASE=false
SEED_ADMIN_EMAIL=admin@example.com
SEED_ADMIN_PASSWORD=admin123

# =============================================================================
# PRODUCTION SETTINGS
# =============================================================================
# In production, ensure these are set:
# - NODE_ENV=production
# - Strong ACCESS_TOKEN_SECRET and REFRESH_TOKEN_SECRET
# - Valid SMTP credentials
# - Valid CLOUDINARY credentials
# - FRONTEND_URL pointing to your production frontend
# - LOG_LEVEL=error
# - DEBUG=false
# - ENABLE_SWAGGER=false

# =============================================================================
# FEATURE FLAGS
# =============================================================================
# Enable/disable features
ENABLE_USER_REGISTRATION=true
ENABLE_EMAIL_VERIFICATION=true
ENABLE_PASSWORD_RESET=true
ENABLE_TWO_FACTOR_AUTH=false
ENABLE_SOCIAL_LOGIN=false
ENABLE_API_DOCUMENTATION=true
ENABLE_WEBSOCKETS=true
ENABLE_FILE_UPLOAD=true
ENABLE_NOTIFICATIONS=true

# =============================================================================
# THIRD-PARTY INTEGRATIONS
# =============================================================================
# Google OAuth (if enabled)
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# GitHub OAuth (if enabled)
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=

# Microsoft OAuth (if enabled)
MICROSOFT_CLIENT_ID=
MICROSOFT_CLIENT_SECRET=

# =============================================================================
# BACKUP & MAINTENANCE
# =============================================================================
# Database backup settings
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30

# Maintenance mode
MAINTENANCE_MODE=false
MAINTENANCE_MESSAGE=System is under maintenance. Please try again later.

# =============================================================================
# NOTES
# =============================================================================
# 1. Generate strong secrets: openssl rand -base64 32
# 2. For Gmail, use App Passwords instead of your regular password
# 3. Never commit .env file to version control
# 4. Use environment-specific values for development, staging, and production
# 5. Test email functionality before deploying to production
# 6. Ensure all required services (MongoDB, Redis) are running
# 7. Configure proper CORS settings for your frontend domain
# 8. Set up proper logging and monitoring in production
# 9. Use HTTPS in production environments
# 10. Regularly rotate secrets and API keys